=head1 YESH, THE MANUAL

L<Yesh> is...

=head1 INSTALLATION


=head1 WEB-BASED SET UP

=begin html

<a href="../../setup">Set up</a>. Use JS to hide this?

=end html

=head1 CONFIGURATION

=head2 THEMES

=head2 PLUGINS AND EXTENSIONS

=head2 LOCAL CONFIGURATION

There are two configuration files used by Yesh while a site is running live (in production). They are C<yesh.yml> and C<yesh_local.yml>. This is a L<Catalyst> convention for setting up sites with L<Catalyst::Plugin::ConfigLoader>.

=begin html

<a href="../../txt/yesh_local.txt">Sample configuration file</a>. Use JS to hide this? These should only be exposed on local/running installations. Could be a hook in the viewer to surface them.

=end html


=over 4

=item yesh.yml

B<DO NOT> edit, remove, or otherwise molest this file. Your site will break unless you know exactly what you are doing and it is part of Yesh's revision control so your changes will break or get overwritten when you upgrade. Never fear because you can change every single setting in the file by editing-

=item yesh_local.yml

This is the local, customized configuration. It will contain information like your real database settings, themed template paths, site name, security settings, and so on.

You are welcome to edit this file but if you don't know what you're doing, you are almost guaranteed to break your site. Refer to L<YAML> and L<Catalyst::Manual>.

=back

=head2 CONFIGURATION SETTINGS

Inside your local configuration file you can set several prominent variables under the key C<site>.

 Controller::Article;
 __PACKAGE__->config( articles_per_page => 10 );

            $user->add_to_site_roles($author_role)
                if $self->{new_users_get_author_role};


=over 4

=item configured

This is automatically set to the date and time of the set up if using the web based set up. B<DO NOT> change it. You will probably break your application.

=item Model::DBIC

This is the configuration for the site's main database. If you want to edit it manually, you will need to know L<DBIx::Class> and L<DBIx::Class::Schema>. You are configuring a Catalyst modelE<mdash>L<Catalyst::Model::DBIC::Schema>E<mdash>to use the site's schemaE<mdash>L<Yesh::Schema>.

=item _321

=item _321

=back

=head1 TECHNICAL DOCUMENTS

Please see the various documents for individual modules. E.g., L<Yesh::Schema>, L<Yesh::Controller::User>, L<Yesh::View::Alloy>, and so on.

=head1 YESH SPEC

=head2 Models

=head3 L<Yesh::Model::DBIC>

=head2 Controllers

This generally reflects the URI dispatch scheme. All URIs are relative to the application root. E.g., if you have Yesh configured at the top of your webserverE<ndash>

 http://expample.com/
      --> /
      --> Yesh::Controller::Root->index
 http://expample.com/admin
      --> /admin
      --> Yesh::Controller::Admin->index

Configured from exec/yesh in your webserverE<ndash>

 http://expample.com/exec/yesh/
      --> /
      --> Yesh::Controller::Root->index
 http://expample.com/exec/yesh/admin
      --> /admin
      --> Yesh::Controller::Admin->index

Private paths, like C</default>, which cannot be called only internally, not by users via browsers, are listed in [brackets].

=head3 L<Yesh::Controller::Root>

=over 4

=item /

Home/root. Shows current top level content. In an unconfigured application, this will redirect to C</setup>.

=item [/default]

Any requested URI which does not match a controllerE<mdash>e.g., C</this/is/not/valid>E<mdash>is sent to C<default> which is a 404 handler.

=back

=head3 L<Yesh::Controller::User>

=over 4

=item /user

Index page for users.

=item /user/id/*

User's home page where * is the user's id.

=item /user/id/*/atom

The feed for the user. Yesh will only support Atom feeds. B<Most> endpoints can be affixed with C</atom> to get a feed of that resource's content.

=back

=head3 L<Yesh::Controller::Session>

=over 4

=item /login

Sign-in. Can be forced to B<https> with L<configuration settings|/CONFIGURATION>. Should redirect to referer if it's also a part of L<Yesh>.

=item /logout

Sign-out. Deletes session.

=back

=head3 L<Yesh::Controller::Article>

Main content viewing and editing package.

=over 4

=item /a

Index to articles. Represents current and featured content.

=item /a/atom

Syndication feed of the article index.

=item /a/id/*

Individual article view.

=item /a/id/*/atom

Individual article feed. Updated for content updates, new discussion, new child resources no matter how deep.

=back

=head3 L<Yesh::Controller::Admin>

=over 4

=item _321

=back

=head3 L<Yesh::Controller::Error>

=over 4

=item _321

=back

=head3 L<Yesh::Controller::Man>

=over 4

=item _321

=back

=head3 L<Yesh::Controller::Search>

=over 4

=item _321

=back

=head3 L<Yesh::Controller::321>

=over 4

=item _321

=back

=head3 L<Yesh::Controller::321>

=over 4

=item _321

=back

=head3 L<Yesh::Controller::321>

=over 4

=item _321

asdf

=back

=head2 Views

=head3 L<Yesh::View::Alloy>

=head4 Macros

Within alloy templates you have a handful of macros available; see F<root/alloy/lib/macros.tt> for the code.

=over 4

=item _321

asdf

=back

=head4 Variables

=over 4

=item _321

=back

=head4 Configuration

=over 4

=item _321

=back

=head1 SECURITY

If these are set in your configuration, 

 Controller::Session:
   secure_login: 1

 Controller::User:
   secure_registration: 1


=head1 TESTING

=head1 TO DO (PLEASE SUBMIT PATCHES!)

=head2 TUTORIALS

=over 4

=item Secure certificate / https setup.

=item nginx.

=item fastcgi service script and deployment.

=item Apache + modperl.

=back

=head1 SUGGESTED READING

=head1 LICENSE, COPYRIGHT, AUTHOR

See L<Yesh> and L<Yesh::Manual::ThirdParty>.

=cut
